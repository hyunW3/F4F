{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b0b6c894-7d78-48c7-9a72-57c0131e62e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "os.environ[\"CUDA_DEVICE_ORDER\"] = \"PCI_BUS_ID\"\n",
    "os.environ['CUDA_VISIBLE_DEVICES'] = '3'\n",
    "os.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = '3'\n",
    "import torch\n",
    "import torchvision\n",
    "import torchvision.transforms as transforms\n",
    "import torchvision.datasets as dataset\n",
    "from torch.autograd import Variable\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from copy import deepcopy as d_copy\n",
    "import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4dbd81aa-7939-4fcd-9bcc-eb4cf950233c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cuda\n"
     ]
    }
   ],
   "source": [
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "#error_index = 0\n",
    "vgg16_bn = torchvision.models.vgg16_bn(pretrained=True)#.to(device)\n",
    "print(device)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4fe0315b-90d2-4d99-a7a8-a53324054054",
   "metadata": {},
   "outputs": [],
   "source": [
    "from importnb import Notebook"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dc28da8c-8258-4740-bf72-b1dc5d7cdae2",
   "metadata": {},
   "outputs": [],
   "source": [
    "with Notebook(lazy=True):\n",
    "    import F4F_model_Submodel\n",
    "header = F4F_model_Submodel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4d356098-fb9e-47d0-87c0-bd2d049299c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "===INFO===\n",
      "torch ver : 1.8.0\n",
      "torchvision ver : 0.2.2 \n",
      "GPU model : TITAN RTX\n",
      "train dataset[4000], test dataset[1563] are loaded\n"
     ]
    }
   ],
   "source": [
    "# set randomness\n",
    "seed = 0\n",
    "\n",
    "header.set_randomness(seed) # ipynb module import means run all cell in file\n",
    "# load dataset\n",
    "dataset_path = \"/media/2/Network/Imagenet_dup/\"\n",
    "retrain_model_path = \"/media/0/Network/0821_to_fullmodels/\"\n",
    "batch_size = 32 # 32~ out of memory in 3080\n",
    "num_train = 128000 #640000\n",
    "\n",
    "train_dataloader,test_dataloader = header.get_dataset(num_train,batch_size,\n",
    "                  dataset_path,retrain_model_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "18d4579d-7192-4c1b-bf80-bf588383877b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#In_layer_number = 34 # 34 conv5_1 convolution\n",
    "#Out_layer_number = 36 # 36 conv5_1 relu \n",
    "error_index=0\n",
    "max_epoch = 90\n",
    "num_error = 64"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "147afee8-cbb6-4065-8176-9237ffa31cf2",
   "metadata": {},
   "outputs": [],
   "source": [
    "log_file = \"./log/3fc_64_acc_log_0831.txt\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4264bffc-c9fa-4aca-8485-2617c74830b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "f4f = header.F4F().to(device)\n",
    "optimizer = torch.optim.SGD(f4f.parameters(),lr=1e-3,weight_decay=1e-4)\n",
    "#loss_fn = nn.CrossEntropyLoss()\n",
    "def loss_fn(loss1_ratio,pred,label, filter_orig,filter_f4f):\n",
    "    if(loss1_ratio <0 or loss1_ratio >1 ):\n",
    "        print(\"wrong parameter ratio \",loss1_ratio)\n",
    "        return nan\n",
    "    loss1 = nn.CrossEntropyLoss()\n",
    "    loss2 = nn.MSELoss()\n",
    "    a = loss1(pred,label)\n",
    "    b = loss2(filter_orig,filter_f4f)\n",
    "    return loss1_ratio * a + (1-loss1_ratio) * b\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "35927f2b-1bcc-4e69-aa73-1a11681238f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method Module.parameters of F4F(\n",
       "  (Ffc1): Linear(in_features=4608, out_features=4608, bias=True)\n",
       "  (Efc1): Linear(in_features=512, out_features=512, bias=True)\n",
       "  (Efc2): Linear(in_features=512, out_features=128, bias=True)\n",
       "  (fc1): Linear(in_features=4736, out_features=4736, bias=True)\n",
       "  (fc2): Linear(in_features=4736, out_features=4608, bias=True)\n",
       ")>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f4f.parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b07f5901-a376-4cd5-8d8f-0e2b3fd84de1",
   "metadata": {},
   "outputs": [],
   "source": [
    "if torch.cuda.device_count() >1 :\n",
    "    print(\"data parallel start\")\n",
    "    f4f = nn.DataParallel(f4f).to(device)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7feb48a3-6382-4db2-99dd-b7d5c3934437",
   "metadata": {},
   "outputs": [],
   "source": [
    "#split_model = split_layer(vgg16_bn,0,Out_layer_number)\n",
    "\n",
    "original_model = d_copy(vgg16_bn).to(device)\n",
    "# subset of vgg16 (whole layer) with f4f\n",
    "header.hook_register(vgg16_bn)\n",
    "target_model = header.Target_model(vgg16_bn).to(device)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "27a02191-b3dd-4af5-a223-4dbe1832f160",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc979b91-c459-4d63-aae4-8455536b4d53",
   "metadata": {
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Submodel case\n",
      "..........\n",
      "[1,   100] loss: 4.000732\n",
      "..........\n",
      "[1,   200] loss: 3.989866\n",
      "..........\n",
      "[1,   300] loss: 4.053979\n",
      "..........\n",
      "[1,   400] loss: 4.039196\n",
      "..........\n",
      "[1,   500] loss: 4.033140\n",
      "..........\n",
      "[1,   600] loss: 4.000184\n",
      "..........\n",
      "[1,   700] loss: 3.993123\n",
      "..........\n",
      "[1,   800] loss: 4.042930\n",
      "..........\n",
      "[1,   900] loss: 4.046242\n",
      "..........\n",
      "[1,  1000] loss: 4.007304\n",
      "..........\n",
      "[1,  1100] loss: 4.068754\n",
      "..........\n",
      "[1,  1200] loss: 3.983868\n",
      "..........\n",
      "[1,  1300] loss: 4.047846\n",
      "..........\n",
      "[1,  1400] loss: 4.018809\n",
      "..........\n",
      "[1,  1500] loss: 4.018971\n",
      "..........\n",
      "[1,  1600] loss: 4.029132\n",
      "..........\n",
      "[1,  1700] loss: 4.016046\n",
      "..........\n",
      "[1,  1800] loss: 4.006550\n",
      "..........\n",
      "[1,  1900] loss: 4.030933\n",
      "..........\n",
      "[1,  2000] loss: 4.013392\n",
      "..........\n",
      "[1,  2100] loss: 4.015676\n",
      "..........\n",
      "[1,  2200] loss: 3.976874\n",
      "..........\n",
      "[1,  2300] loss: 4.032697\n",
      "..........\n",
      "[1,  2400] loss: 4.028475\n",
      "..........\n",
      "[1,  2500] loss: 3.995002\n",
      "..........\n",
      "[1,  2600] loss: 4.013335\n",
      "..........\n",
      "[1,  2700] loss: 4.031195\n",
      "..........\n",
      "[1,  2800] loss: 4.004839\n",
      "..........\n",
      "[1,  2900] loss: 4.001955\n",
      "..........\n",
      "[1,  3000] loss: 4.011802\n",
      "..........\n",
      "[1,  3100] loss: 4.019141\n",
      "..........\n",
      "[1,  3200] loss: 4.032524\n",
      "..........\n",
      "[1,  3300] loss: 4.028376\n",
      "..........\n",
      "[1,  3400] loss: 4.036449\n",
      "..........\n",
      "[1,  3500] loss: 4.011865\n",
      "..........\n",
      "[1,  3600] loss: 4.023357\n",
      "..........\n",
      "[1,  3700] loss: 4.014110\n",
      "..........\n",
      "[1,  3800] loss: 4.017943\n",
      "..........\n",
      "[1,  3900] loss: 4.034653\n",
      "..........\n",
      "[1,  4000] loss: 4.012201\n",
      "total average loss : 0.126\n",
      "== epoch  0 == train acc : 0.1141\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.078\n",
      "step : 400 / 1563 acc : 0.062\n",
      "step : 600 / 1563 acc : 0.083\n",
      "step : 800 / 1563 acc : 0.078\n",
      "step : 1000 / 1563 acc : 0.084\n",
      "step : 1200 / 1563 acc : 0.096\n",
      "step : 1400 / 1563 acc : 0.096\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[2,   100] loss: 4.020447\n",
      "..........\n",
      "[2,   200] loss: 4.004078\n",
      "..........\n",
      "[2,   300] loss: 4.040187\n",
      "..........\n",
      "[2,   400] loss: 4.048302\n",
      "..........\n",
      "[2,   500] loss: 3.980685\n",
      "..........\n",
      "[2,   600] loss: 4.020961\n",
      "..........\n",
      "[2,   700] loss: 4.026435\n",
      "..........\n",
      "[2,   800] loss: 4.012602\n",
      "..........\n",
      "[2,   900] loss: 4.041803\n",
      "..........\n",
      "[2,  1000] loss: 3.963342\n",
      "..........\n",
      "[2,  1100] loss: 4.044007\n",
      "..........\n",
      "[2,  1200] loss: 4.006268\n",
      "..........\n",
      "[2,  1300] loss: 4.015968\n",
      "..........\n",
      "[2,  1400] loss: 4.055437\n",
      "..........\n",
      "[2,  1500] loss: 3.968315\n",
      "..........\n",
      "[2,  1600] loss: 4.013709\n",
      "..........\n",
      "[2,  1700] loss: 3.997256\n",
      "..........\n",
      "[2,  1800] loss: 4.029730\n",
      "..........\n",
      "[2,  1900] loss: 4.021247\n",
      "..........\n",
      "[2,  2000] loss: 3.986347\n",
      "..........\n",
      "[2,  2100] loss: 4.005951\n",
      "..........\n",
      "[2,  2200] loss: 3.979568\n",
      "..........\n",
      "[2,  2300] loss: 4.027311\n",
      "..........\n",
      "[2,  2400] loss: 4.025175\n",
      "..........\n",
      "[2,  2500] loss: 4.004217\n",
      "..........\n",
      "[2,  2600] loss: 4.020218\n",
      "..........\n",
      "[2,  2700] loss: 3.986631\n",
      "..........\n",
      "[2,  2800] loss: 4.045695\n",
      "..........\n",
      "[2,  2900] loss: 4.023662\n",
      "..........\n",
      "[2,  3000] loss: 4.026085\n",
      "..........\n",
      "[2,  3100] loss: 4.036185\n",
      "..........\n",
      "[2,  3200] loss: 4.013414\n",
      "..........\n",
      "[2,  3300] loss: 4.022158\n",
      "..........\n",
      "[2,  3400] loss: 4.047400\n",
      "..........\n",
      "[2,  3500] loss: 4.063525\n",
      "..........\n",
      "[2,  3600] loss: 3.978513\n",
      "..........\n",
      "[2,  3700] loss: 4.033829\n",
      "..........\n",
      "[2,  3800] loss: 4.025682\n",
      "..........\n",
      "[2,  3900] loss: 4.002743\n",
      "..........\n",
      "[2,  4000] loss: 4.059631\n",
      "total average loss : 0.126\n",
      "== epoch  1 == train acc : 0.0953\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.094\n",
      "step : 400 / 1563 acc : 0.070\n",
      "step : 600 / 1563 acc : 0.068\n",
      "step : 800 / 1563 acc : 0.078\n",
      "step : 1000 / 1563 acc : 0.075\n",
      "step : 1200 / 1563 acc : 0.094\n",
      "step : 1400 / 1563 acc : 0.094\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[3,   100] loss: 4.042349\n",
      "..........\n",
      "[3,   200] loss: 4.010740\n",
      "..........\n",
      "[3,   300] loss: 4.018895\n",
      "..........\n",
      "[3,   400] loss: 4.040147\n",
      "..........\n",
      "[3,   500] loss: 4.004555\n",
      "..........\n",
      "[3,   600] loss: 3.993373\n",
      "..........\n",
      "[3,   700] loss: 4.039386\n",
      "..........\n",
      "[3,   800] loss: 3.997272\n",
      "..........\n",
      "[3,   900] loss: 4.052098\n",
      "..........\n",
      "[3,  1000] loss: 3.971189\n",
      "..........\n",
      "[3,  1100] loss: 4.000903\n",
      "..........\n",
      "[3,  1200] loss: 3.983379\n",
      "..........\n",
      "[3,  1300] loss: 3.998782\n",
      "..........\n",
      "[3,  1400] loss: 4.049343\n",
      "..........\n",
      "[3,  1500] loss: 3.980169\n",
      "..........\n",
      "[3,  1600] loss: 4.022332\n",
      "..........\n",
      "[3,  1700] loss: 4.015150\n",
      "..........\n",
      "[3,  1800] loss: 4.018821\n",
      "..........\n",
      "[3,  1900] loss: 4.037669\n",
      "..........\n",
      "[3,  2000] loss: 4.012085\n",
      "..........\n",
      "[3,  2100] loss: 4.005749\n",
      "..........\n",
      "[3,  2200] loss: 4.014656\n",
      "..........\n",
      "[3,  2300] loss: 4.029017\n",
      "..........\n",
      "[3,  2400] loss: 4.027819\n",
      "..........\n",
      "[3,  2500] loss: 3.990668\n",
      "..........\n",
      "[3,  2600] loss: 3.983363\n",
      "..........\n",
      "[3,  2700] loss: 4.012606\n",
      "..........\n",
      "[3,  2800] loss: 4.040357\n",
      "..........\n",
      "[3,  2900] loss: 4.022586\n",
      "..........\n",
      "[3,  3000] loss: 4.013551\n",
      "..........\n",
      "[3,  3100] loss: 4.007551\n",
      "..........\n",
      "[3,  3200] loss: 4.024823\n",
      "..........\n",
      "[3,  3300] loss: 4.010100\n",
      "..........\n",
      "[3,  3400] loss: 4.026490\n",
      "..........\n",
      "[3,  3500] loss: 4.034493\n",
      "..........\n",
      "[3,  3600] loss: 3.998106\n",
      "..........\n",
      "[3,  3700] loss: 4.011258\n",
      "..........\n",
      "[3,  3800] loss: 4.036481\n",
      "..........\n",
      "[3,  3900] loss: 4.040858\n",
      "..........\n",
      "[3,  4000] loss: 4.041630\n",
      "total average loss : 0.126\n",
      "== epoch  2 == train acc : 0.0930\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.109\n",
      "step : 400 / 1563 acc : 0.086\n",
      "step : 600 / 1563 acc : 0.089\n",
      "step : 800 / 1563 acc : 0.082\n",
      "step : 1000 / 1563 acc : 0.087\n",
      "step : 1200 / 1563 acc : 0.081\n",
      "step : 1400 / 1563 acc : 0.087\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[4,   100] loss: 4.007509\n",
      "..........\n",
      "[4,   200] loss: 4.036621\n",
      "..........\n",
      "[4,   300] loss: 4.018247\n",
      "..........\n",
      "[4,   400] loss: 4.048158\n",
      "..........\n",
      "[4,   500] loss: 3.976604\n",
      "..........\n",
      "[4,   600] loss: 4.031041\n",
      "..........\n",
      "[4,   700] loss: 4.017645\n",
      "..........\n",
      "[4,   800] loss: 4.005878\n",
      "..........\n",
      "[4,   900] loss: 4.064485\n",
      "..........\n",
      "[4,  1000] loss: 3.975139\n",
      "..........\n",
      "[4,  1100] loss: 4.043580\n",
      "..........\n",
      "[4,  1200] loss: 4.032153\n",
      "..........\n",
      "[4,  1300] loss: 4.005592\n",
      "..........\n",
      "[4,  1400] loss: 4.026138\n",
      "..........\n",
      "[4,  1500] loss: 3.961425\n",
      "..........\n",
      "[4,  1600] loss: 4.018404\n",
      "..........\n",
      "[4,  1700] loss: 4.031337\n",
      "..........\n",
      "[4,  1800] loss: 4.008065\n",
      "..........\n",
      "[4,  1900] loss: 4.027297\n",
      "..........\n",
      "[4,  2000] loss: 3.994096\n",
      "..........\n",
      "[4,  2100] loss: 4.008233\n",
      "..........\n",
      "[4,  2200] loss: 4.009789\n",
      "..........\n",
      "[4,  2300] loss: 4.031251\n",
      "..........\n",
      "[4,  2400] loss: 4.038102\n",
      "..........\n",
      "[4,  2500] loss: 3.987193\n",
      "..........\n",
      "[4,  2600] loss: 4.006767\n",
      "..........\n",
      "[4,  2700] loss: 4.003021\n",
      "..........\n",
      "[4,  2800] loss: 4.005262\n",
      "..........\n",
      "[4,  2900] loss: 4.057367\n",
      "..........\n",
      "[4,  3000] loss: 4.001720\n",
      "..........\n",
      "[4,  3100] loss: 4.007015\n",
      "..........\n",
      "[4,  3200] loss: 4.003216\n",
      "..........\n",
      "[4,  3300] loss: 4.024532\n",
      "..........\n",
      "[4,  3400] loss: 4.016807\n",
      "..........\n",
      "[4,  3500] loss: 4.036450\n",
      "..........\n",
      "[4,  3600] loss: 3.999375\n",
      "..........\n",
      "[4,  3700] loss: 3.992195\n",
      "..........\n",
      "[4,  3800] loss: 4.039855\n",
      "..........\n",
      "[4,  3900] loss: 4.002928\n",
      "..........\n",
      "[4,  4000] loss: 4.066470\n",
      "total average loss : 0.126\n",
      "== epoch  3 == train acc : 0.0977\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.141\n",
      "step : 400 / 1563 acc : 0.109\n",
      "step : 600 / 1563 acc : 0.083\n",
      "step : 800 / 1563 acc : 0.105\n",
      "step : 1000 / 1563 acc : 0.109\n",
      "step : 1200 / 1563 acc : 0.109\n",
      "step : 1400 / 1563 acc : 0.103\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[5,   100] loss: 4.040959\n",
      "..........\n",
      "[5,   200] loss: 4.028662\n",
      "..........\n",
      "[5,   300] loss: 3.987723\n",
      "..........\n",
      "[5,   400] loss: 4.021896\n",
      "..........\n",
      "[5,   500] loss: 3.991842\n",
      "..........\n",
      "[5,   600] loss: 3.994229\n",
      "..........\n",
      "[5,   700] loss: 4.035707\n",
      "..........\n",
      "[5,   800] loss: 4.015739\n",
      "..........\n",
      "[5,   900] loss: 4.055634\n",
      "..........\n",
      "[5,  1000] loss: 3.992922\n",
      "..........\n",
      "[5,  1100] loss: 4.017313\n",
      "..........\n",
      "[5,  1200] loss: 4.005204\n",
      "..........\n",
      "[5,  1300] loss: 3.999158\n",
      "..........\n",
      "[5,  1400] loss: 4.042308\n",
      "..........\n",
      "[5,  1500] loss: 3.992462\n",
      "..........\n",
      "[5,  1600] loss: 4.039048\n",
      "..........\n",
      "[5,  1700] loss: 4.031098\n",
      "..........\n",
      "[5,  1800] loss: 4.025765\n",
      "..........\n",
      "[5,  1900] loss: 4.022867\n",
      "..........\n",
      "[5,  2000] loss: 4.011989\n",
      "..........\n",
      "[5,  2100] loss: 4.021826\n",
      "..........\n",
      "[5,  2200] loss: 3.993787\n",
      "..........\n",
      "[5,  2300] loss: 4.022841\n",
      "..........\n",
      "[5,  2400] loss: 4.022900\n",
      "..........\n",
      "[5,  2500] loss: 3.994599\n",
      "..........\n",
      "[5,  2600] loss: 4.000372\n",
      "..........\n",
      "[5,  2700] loss: 4.020461\n",
      "..........\n",
      "[5,  2800] loss: 4.037132\n",
      "..........\n",
      "[5,  2900] loss: 4.030362\n",
      "..........\n",
      "[5,  3000] loss: 4.024332\n",
      "..........\n",
      "[5,  3100] loss: 3.998967\n",
      "..........\n",
      "[5,  3200] loss: 3.997801\n",
      "..........\n",
      "[5,  3300] loss: 4.017406\n",
      "..........\n",
      "[5,  3400] loss: 4.017751\n",
      "..........\n",
      "[5,  3500] loss: 4.026443\n",
      "..........\n",
      "[5,  3600] loss: 3.994364\n",
      "..........\n",
      "[5,  3700] loss: 4.020727\n",
      "..........\n",
      "[5,  3800] loss: 4.020849\n",
      "..........\n",
      "[5,  3900] loss: 4.004187\n",
      "..........\n",
      "[5,  4000] loss: 4.024008\n",
      "total average loss : 0.126\n",
      "== epoch  4 == train acc : 0.0922\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.094\n",
      "step : 400 / 1563 acc : 0.117\n",
      "step : 600 / 1563 acc : 0.109\n",
      "step : 800 / 1563 acc : 0.102\n",
      "step : 1000 / 1563 acc : 0.100\n",
      "step : 1200 / 1563 acc : 0.099\n",
      "step : 1400 / 1563 acc : 0.096\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[6,   100] loss: 4.003516\n",
      "..........\n",
      "[6,   200] loss: 4.004972\n",
      "..........\n",
      "[6,   300] loss: 4.026607\n",
      "..........\n",
      "[6,   400] loss: 4.028339\n",
      "..........\n",
      "[6,   500] loss: 3.999033\n",
      "..........\n",
      "[6,   600] loss: 4.006908\n",
      "..........\n",
      "[6,   700] loss: 4.010510\n",
      "..........\n",
      "[6,   800] loss: 4.009638\n",
      "..........\n",
      "[6,   900] loss: 4.051966\n",
      "..........\n",
      "[6,  1000] loss: 3.979929\n",
      "..........\n",
      "[6,  1100] loss: 4.009848\n",
      "..........\n",
      "[6,  1200] loss: 4.028182\n",
      "..........\n",
      "[6,  1300] loss: 4.003801\n",
      "..........\n",
      "[6,  1400] loss: 4.049961\n",
      "..........\n",
      "[6,  1500] loss: 3.984938\n",
      "..........\n",
      "[6,  1600] loss: 4.038360\n",
      "..........\n",
      "[6,  1700] loss: 4.044571\n",
      "..........\n",
      "[6,  1800] loss: 4.048767\n",
      "..........\n",
      "[6,  1900] loss: 4.016646\n",
      "..........\n",
      "[6,  2000] loss: 3.979499\n",
      "..........\n",
      "[6,  2100] loss: 4.025001\n",
      "..........\n",
      "[6,  2200] loss: 3.999677\n",
      "..........\n",
      "[6,  2300] loss: 4.001786\n",
      "..........\n",
      "[6,  2400] loss: 4.004170\n",
      "..........\n",
      "[6,  2500] loss: 3.993709\n",
      "..........\n",
      "[6,  2600] loss: 3.998325\n",
      "..........\n",
      "[6,  2700] loss: 4.010051\n",
      "..........\n",
      "[6,  2800] loss: 4.038235\n",
      "..........\n",
      "[6,  2900] loss: 4.003326\n",
      "..........\n",
      "[6,  3000] loss: 4.024919\n",
      "..........\n",
      "[6,  3100] loss: 4.008985\n",
      "..........\n",
      "[6,  3200] loss: 4.028948\n",
      "..........\n",
      "[6,  3300] loss: 4.042516\n",
      "..........\n",
      "[6,  3400] loss: 4.014934\n",
      "..........\n",
      "[6,  3500] loss: 4.033102\n",
      "..........\n",
      "[6,  3600] loss: 4.008626\n",
      "..........\n",
      "[6,  3700] loss: 3.992218\n",
      "..........\n",
      "[6,  3800] loss: 4.012994\n",
      "..........\n",
      "[6,  3900] loss: 4.012306\n",
      "..........\n",
      "[6,  4000] loss: 4.039318\n",
      "total average loss : 0.125\n",
      "== epoch  5 == train acc : 0.0969\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.078\n",
      "step : 400 / 1563 acc : 0.070\n",
      "step : 600 / 1563 acc : 0.073\n",
      "step : 800 / 1563 acc : 0.070\n",
      "step : 1000 / 1563 acc : 0.081\n",
      "step : 1200 / 1563 acc : 0.083\n",
      "step : 1400 / 1563 acc : 0.092\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[7,   100] loss: 4.018382\n",
      "..........\n",
      "[7,   200] loss: 4.011070\n",
      "..........\n",
      "[7,   300] loss: 4.024729\n",
      "..........\n",
      "[7,   400] loss: 4.031343\n",
      "..........\n",
      "[7,   500] loss: 3.987431\n",
      "..........\n",
      "[7,   600] loss: 4.020699\n",
      "..........\n",
      "[7,   700] loss: 4.019961\n",
      "..........\n",
      "[7,   800] loss: 4.028152\n",
      "..........\n",
      "[7,   900] loss: 4.048399\n",
      "..........\n",
      "[7,  1000] loss: 3.966837\n",
      "..........\n",
      "[7,  1100] loss: 3.998795\n",
      "..........\n",
      "[7,  1200] loss: 4.016952\n",
      "..........\n",
      "[7,  1300] loss: 4.036245\n",
      "..........\n",
      "[7,  1400] loss: 4.018062\n",
      "..........\n",
      "[7,  1500] loss: 3.966054\n",
      "..........\n",
      "[7,  1600] loss: 3.996814\n",
      "..........\n",
      "[7,  1700] loss: 4.012882\n",
      "..........\n",
      "[7,  1800] loss: 4.039518\n",
      "..........\n",
      "[7,  1900] loss: 4.018341\n",
      "..........\n",
      "[7,  2000] loss: 3.996177\n",
      "..........\n",
      "[7,  2100] loss: 4.016368\n",
      "..........\n",
      "[7,  2200] loss: 3.991011\n",
      "..........\n",
      "[7,  2300] loss: 4.050004\n",
      "..........\n",
      "[7,  2400] loss: 4.023319\n",
      "..........\n",
      "[7,  2500] loss: 4.017955\n",
      "..........\n",
      "[7,  2600] loss: 4.005924\n",
      "..........\n",
      "[7,  2700] loss: 4.022891\n",
      "..........\n",
      "[7,  2800] loss: 4.037763\n",
      "..........\n",
      "[7,  2900] loss: 4.035064\n",
      "..........\n",
      "[7,  3000] loss: 4.007093\n",
      "..........\n",
      "[7,  3100] loss: 4.018177\n",
      "..........\n",
      "[7,  3200] loss: 3.997546\n",
      "..........\n",
      "[7,  3300] loss: 4.012821\n",
      "..........\n",
      "[7,  3400] loss: 3.989290\n",
      "..........\n",
      "[7,  3500] loss: 4.049724\n",
      "..........\n",
      "[7,  3600] loss: 4.013761\n",
      "..........\n",
      "[7,  3700] loss: 4.006879\n",
      "..........\n",
      "[7,  3800] loss: 4.014711\n",
      "..........\n",
      "[7,  3900] loss: 4.021818\n",
      "..........\n",
      "[7,  4000] loss: 4.036657\n",
      "total average loss : 0.125\n",
      "== epoch  6 == train acc : 0.0984\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.078\n",
      "step : 400 / 1563 acc : 0.109\n",
      "step : 600 / 1563 acc : 0.115\n",
      "step : 800 / 1563 acc : 0.105\n",
      "step : 1000 / 1563 acc : 0.100\n",
      "step : 1200 / 1563 acc : 0.102\n",
      "step : 1400 / 1563 acc : 0.100\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[8,   100] loss: 4.012676\n",
      "..........\n",
      "[8,   200] loss: 4.010419\n",
      "..........\n",
      "[8,   300] loss: 4.005367\n",
      "..........\n",
      "[8,   400] loss: 4.046932\n",
      "..........\n",
      "[8,   500] loss: 3.992095\n",
      "..........\n",
      "[8,   600] loss: 4.021380\n",
      "..........\n",
      "[8,   700] loss: 4.023869\n",
      "..........\n",
      "[8,   800] loss: 4.013448\n",
      "..........\n",
      "[8,   900] loss: 4.036312\n",
      "..........\n",
      "[8,  1000] loss: 3.994596\n",
      "..........\n",
      "[8,  1100] loss: 4.022489\n",
      "..........\n",
      "[8,  1200] loss: 4.025905\n",
      "..........\n",
      "[8,  1300] loss: 3.988716\n",
      "..........\n",
      "[8,  1400] loss: 4.045473\n",
      "..........\n",
      "[8,  1500] loss: 3.995543\n",
      "..........\n",
      "[8,  1600] loss: 3.991718\n",
      "..........\n",
      "[8,  1700] loss: 3.989301\n",
      "..........\n",
      "[8,  1800] loss: 4.011609\n",
      "..........\n",
      "[8,  1900] loss: 4.038801\n",
      "..........\n",
      "[8,  2000] loss: 4.013328\n",
      "..........\n",
      "[8,  2100] loss: 4.025151\n",
      "..........\n",
      "[8,  2200] loss: 3.996128\n",
      "..........\n",
      "[8,  2300] loss: 4.034293\n",
      "..........\n",
      "[8,  2400] loss: 4.043725\n",
      "..........\n",
      "[8,  2500] loss: 3.997192\n",
      "..........\n",
      "[8,  2600] loss: 3.980095\n",
      "..........\n",
      "[8,  2700] loss: 3.992389\n",
      "..........\n",
      "[8,  2800] loss: 4.028107\n",
      "..........\n",
      "[8,  2900] loss: 4.023990\n",
      "..........\n",
      "[8,  3000] loss: 4.016174\n",
      "..........\n",
      "[8,  3100] loss: 4.019800\n",
      "..........\n",
      "[8,  3200] loss: 4.023417\n",
      "..........\n",
      "[8,  3300] loss: 4.057073\n",
      "..........\n",
      "[8,  3400] loss: 4.018692\n",
      "..........\n",
      "[8,  3500] loss: 4.026953\n",
      "..........\n",
      "[8,  3600] loss: 3.993820\n",
      "..........\n",
      "[8,  3700] loss: 4.018916\n",
      "..........\n",
      "[8,  3800] loss: 4.043597\n",
      "..........\n",
      "[8,  3900] loss: 4.008124\n",
      "..........\n",
      "[8,  4000] loss: 4.036405\n",
      "total average loss : 0.126\n",
      "== epoch  7 == train acc : 0.1016\n",
      "======eval start=======\n",
      "step : 200 / 1563 acc : 0.141\n",
      "step : 400 / 1563 acc : 0.102\n",
      "step : 600 / 1563 acc : 0.104\n",
      "step : 800 / 1563 acc : 0.105\n",
      "step : 1000 / 1563 acc : 0.106\n",
      "step : 1200 / 1563 acc : 0.102\n",
      "step : 1400 / 1563 acc : 0.100\n",
      "\n",
      "Eval acc of model on imagenet : 0.0960 %, Loss : 0.1246\n",
      "======eval  end ======\n",
      "..........\n",
      "[9,   100] loss: 4.022745\n",
      "..........\n",
      "[9,   200] loss: 4.005243\n",
      "..........\n",
      "[9,   300] loss: 4.016242\n",
      "..........\n",
      "[9,   400] loss: 4.057432\n",
      "..........\n",
      "[9,   500] loss: 3.980053\n",
      "..........\n",
      "[9,   600] loss: 4.032192\n",
      "..........\n",
      "[9,   700] loss: 4.033734\n",
      "..........\n",
      "[9,   800] loss: 4.001124\n",
      "..........\n",
      "[9,   900] loss: 4.040429\n",
      "..........\n",
      "[9,  1000] loss: 3.984307\n",
      "..........\n",
      "[9,  1100] loss: 4.023928\n",
      "..........\n",
      "[9,  1200] loss: 4.034018\n",
      "..........\n",
      "[9,  1300] loss: 4.024069\n",
      "..........\n",
      "[9,  1400] loss: 4.052137\n",
      "..........\n",
      "[9,  1500] loss: 3.985368\n",
      "..........\n",
      "[9,  1600] loss: 3.997567\n",
      "..........\n",
      "[9,  1700] loss: 4.023545\n",
      "..........\n",
      "[9,  1800] loss: 4.033863\n",
      "..........\n",
      "[9,  1900] loss: 4.046297\n",
      "..........\n",
      "[9,  2000] loss: 3.971430\n",
      "..........\n",
      "[9,  2100] loss: 3.991829\n",
      "..........\n",
      "[9,  2200] loss: 4.009149\n",
      "..........\n",
      "[9,  2300] loss: 4.030802\n",
      "..........\n",
      "[9,  2400] loss: 4.026531\n",
      "..........\n",
      "[9,  2500] loss: 4.008072\n",
      "..."
     ]
    }
   ],
   "source": [
    "\n",
    "#optimizer = torch.optim.SGD(param_list,lr=0.01,weight_decay=1e-4)\n",
    "first_feature = []\n",
    "first_label = []\n",
    "offset_info = []\n",
    "f = open(log_file,\"w\")\n",
    "print(\"Submodel case\")\n",
    "f.close()\n",
    "\n",
    "target_model = header.Target_model(vgg16_bn).to(device)\n",
    "    \n",
    "tmp= header.training(f4f,target_model,original_model,\n",
    "                  train_dataloader,test_dataloader,batch_size,\n",
    "                  log_file,retrain_model_path,\n",
    "                  loss_fn,optimizer,\n",
    "                  num_error,max_epoch,True)\n",
    "        # tmp : first_feature,first_label,offset_info\n",
    "first_feature.append(tmp[0])\n",
    "first_label.append(tmp[1])\n",
    "offset_info.append(tmp[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d087fe7c-688e-4bff-9a23-565a0dbbf158",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 여기서부터는 feature 그림 보기 위한 것들입니다.\n",
    "for i in range(10):\n",
    "    print(first_feature[0][0][i],original_out[0][0][i].argmax())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8a75340c-7752-49f4-948f-4c2777412d57",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "w = 10\n",
    "h = 10\n",
    "cols = 32\n",
    "rows = 16\n",
    "def feature_print(pic):\n",
    "    #print(\"test with 'after pooling 4 feature'\")\n",
    "    fig = plt.figure(figsize=(64,32))\n",
    "    ax = []\n",
    "    for i in range(cols*rows):\n",
    "        ch = pic[i,:,:]\n",
    "        ax.append(fig.add_subplot(rows,cols,i+1))\n",
    "        ax[-1].set_title(str(i)+\"th ch (14x14)\")\n",
    "        plt.imshow(ch)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "23c4590c-472f-4dda-ba88-766fbd184048",
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_print(first_feature[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "46670422-0d8b-44fe-979c-f89924c10a8d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
